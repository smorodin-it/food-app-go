basePath: /api
definitions:
  domains.Ingredient:
    properties:
      barcode:
        type: string
      calories:
        type: integer
      carbs:
        type: integer
      fats:
        type: integer
      id:
        type: string
      manufacturer:
        type: string
      name:
        type: string
      proteins:
        type: integer
    type: object
  domains.Inventory:
    properties:
      inventoryId:
        type: string
      name:
        type: string
      userId:
        type: string
      weight:
        type: integer
    type: object
  domains.Meal:
    properties:
      id:
        type: string
      name:
        type: string
      totalWeight:
        type: integer
    type: object
  domains.Measurement:
    properties:
      date:
        type: string
      measurementId:
        type: string
      measurementWeight:
        type: integer
      userId:
        type: string
    type: object
  forms.FormAuth:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  forms.IngredientForm:
    properties:
      barcode:
        type: string
      calories:
        type: integer
      carbs:
        type: integer
      fats:
        type: integer
      manufacturer:
        type: string
      name:
        type: string
      proteins:
        type: integer
    type: object
  forms.InventoryForm:
    properties:
      name:
        type: string
      weight:
        type: integer
    type: object
  forms.MealForm:
    properties:
      name:
        type: string
      totalWeight:
        type: integer
    type: object
  forms.MealIngredientAddForm:
    properties:
      ingredientId:
        type: string
      mealId:
        type: string
      totalWeight:
        type: integer
    type: object
  forms.MealIngredientUpdateForm:
    properties:
      totalWeight:
        type: integer
    type: object
  forms.MeasurementUpdateForm:
    properties:
      measurementWeight:
        type: integer
    type: object
  responses.MealIngredientResp:
    properties:
      id:
        type: string
      name:
        type: string
      weight:
        type: integer
    type: object
  responses.ResponseAdd:
    properties:
      id:
        type: string
    type: object
  responses.ResponseApi-array_domains_Ingredient:
    properties:
      data:
        items:
          $ref: '#/definitions/domains.Ingredient'
        type: array
      error:
        type: string
    type: object
  responses.ResponseApi-array_domains_Inventory:
    properties:
      data:
        items:
          $ref: '#/definitions/domains.Inventory'
        type: array
      error:
        type: string
    type: object
  responses.ResponseApi-domains_Ingredient:
    properties:
      data:
        $ref: '#/definitions/domains.Ingredient'
      error:
        type: string
    type: object
  responses.ResponseApi-domains_Inventory:
    properties:
      data:
        $ref: '#/definitions/domains.Inventory'
      error:
        type: string
    type: object
  responses.ResponseApi-responses_ResponseAdd:
    properties:
      data:
        $ref: '#/definitions/responses.ResponseAdd'
      error:
        type: string
    type: object
  responses.ResponseApi-responses_ResponseStatus:
    properties:
      data:
        $ref: '#/definitions/responses.ResponseStatus'
      error:
        type: string
    type: object
  responses.ResponseStatus:
    properties:
      status:
        type: boolean
    type: object
host: 127.0.0.1:3000
info:
  contact: {}
  description: swagger for food-app api
  title: food-app backend
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Get access and refresh tokens
      parameters:
      - description: Auth user
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/forms.FormAuth'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Get Auth tokens using credentials
      tags:
      - Auth
  /auth/refresh:
    post:
      description: Get access and refresh tokens
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      summary: Get new tokens using refresh token
      tags:
      - Auth
  /ingredient:
    get:
      description: Get ingredients list
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseApi-array_domains_Ingredient'
      security:
      - ApiKeyAuth: []
      summary: Get ingredients list
      tags:
      - Ingredient
    post:
      description: Create new ingredient
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.IngredientForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseApi-responses_ResponseAdd'
      security:
      - ApiKeyAuth: []
      summary: Create new ingredient
      tags:
      - Ingredient
  /ingredient/{id}:
    get:
      description: Retrieve ingredient by id
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseApi-domains_Ingredient'
      security:
      - ApiKeyAuth: []
      summary: Retrieve ingredient by id
      tags:
      - Ingredient
    put:
      description: Update ingredient
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.IngredientForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseApi-responses_ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update ingredient
      tags:
      - Ingredient
  /inventory:
    get:
      description: Get inventory list
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseApi-array_domains_Inventory'
      security:
      - ApiKeyAuth: []
      summary: Get inventory list
      tags:
      - Inventory
    post:
      description: Create new inventory
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.InventoryForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseApi-responses_ResponseAdd'
      security:
      - ApiKeyAuth: []
      summary: Create new inventory
      tags:
      - Inventory
  /inventory/{id}:
    get:
      description: Retrieve inventory by id
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseApi-domains_Inventory'
      security:
      - ApiKeyAuth: []
      summary: Retrieve inventory by id
      tags:
      - Inventory
    put:
      description: Update inventory
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.InventoryForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseApi-responses_ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update inventory
      tags:
      - Inventory
  /meal:
    get:
      description: Get meals list by auth user id
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domains.Meal'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get meals list by auth user id
      tags:
      - Meal
    post:
      description: Create new meal
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.MealForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseAdd'
      security:
      - ApiKeyAuth: []
      summary: Create new meal
      tags:
      - Meal
  /meal/{id}:
    get:
      description: Retrieve meal by id
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.Meal'
      security:
      - ApiKeyAuth: []
      summary: Retrieve meal by id
      tags:
      - Meal
    put:
      description: Update meal
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.MealForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update meal
      tags:
      - Meal
  /meal/{id}/ingredient:
    get:
      description: Get ingredients list in meal
      parameters:
      - description: meal id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MealIngredientResp'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get ingredients list in meal
      tags:
      - Meal
  /meal/all:
    get:
      description: Get meals list
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domains.Meal'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get meals list
      tags:
      - Meal
  /meal/ingredient:
    post:
      description: Add ingredient to meal
      parameters:
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.MealIngredientAddForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseAdd'
      security:
      - ApiKeyAuth: []
      summary: Add ingredient to meal
      tags:
      - Meal
  /meal/ingredient/{id}:
    delete:
      description: Delete ingredient from meal
      parameters:
      - description: ingredient in meal id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Delete ingredient from meal
      tags:
      - Meal
    put:
      description: Update weight of ingredient in meal
      parameters:
      - description: ingredient in meal id
        in: path
        name: request
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.MealIngredientUpdateForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseAdd'
      security:
      - ApiKeyAuth: []
      summary: Update weight of ingredient in meal
      tags:
      - Meal
  /measurement:
    get:
      description: Get measurements list by user id
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domains.Measurement'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get measurements list by user id
      tags:
      - Measurement
    post:
      description: Create new measurement
      parameters:
      - in: query
        name: measurementWeight
        type: integer
      - in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.ResponseAdd'
      security:
      - ApiKeyAuth: []
      summary: Create new measurement
      tags:
      - Measurement
  /measurement/{id}:
    delete:
      description: Delete measurement
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Delete measurement
      tags:
      - Measurement
    get:
      description: Get measurement by id
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domains.Measurement'
      security:
      - ApiKeyAuth: []
      summary: Get measurement by id
      tags:
      - Measurement
    put:
      description: Update measurement
      parameters:
      - description: id
        in: path
        name: request
        required: true
        type: string
      - description: body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/forms.MeasurementUpdateForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStatus'
      security:
      - ApiKeyAuth: []
      summary: Update measurement
      tags:
      - Measurement
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
